<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="ko_KR"><generator uri="https://jekyllrb.com/" version="3.8.6">Jekyll</generator><link href="https://jamesujeon.github.io/feed.xml" rel="self" type="application/atom+xml" /><link href="https://jamesujeon.github.io/" rel="alternate" type="text/html" hreflang="ko_KR" /><updated>2020-01-03T15:06:55+09:00</updated><id>https://jamesujeon.github.io/</id><title type="html">Jamesu Devlog</title><subtitle>Dev Blog by James Minsu Jeon</subtitle><author><name>jamesujeon</name><email>jamesujeon@gmail.com</email></author><entry><title type="html">Jekyll에 Disqus 댓글 서비스 연동하기</title><link href="https://jamesujeon.github.io/posts/2020/01/03/adding-disqus-comment-service-to-jekyll/" rel="alternate" type="text/html" title="Jekyll에 Disqus 댓글 서비스 연동하기" /><published>2020-01-03T00:00:00+09:00</published><updated>2020-01-03T00:00:00+09:00</updated><id>https://jamesujeon.github.io/posts/2020/01/03/adding-disqus-comment-service-to-jekyll</id><content type="html" xml:base="https://jamesujeon.github.io/posts/2020/01/03/adding-disqus-comment-service-to-jekyll/">&lt;h2 id=&quot;별도의-댓글-서비스를-이용해야-하는-이유&quot;&gt;별도의 댓글 서비스를 이용해야 하는 이유&lt;/h2&gt;

&lt;p&gt;Jekyll을 통해 생성한 블로그는 &lt;strong&gt;정적으로 생성된 블로그&lt;/strong&gt;이다.&lt;br /&gt;
이 말은 즉, 동적으로 데이터를 보관하며 사용자에게 보여줄 수 있는 블로그가 아니다.&lt;/p&gt;

&lt;p&gt;댓글 서비스를 운영하기 위해서는 댓글이라는 데이터의 보관이 필요하고, 이는 Jekyll만 사용해서는 불가능하다.&lt;br /&gt;
따라서 외부 플러그인을 통해 댓글 서비스를 이용하는 방법을 사용하도록 한다.&lt;br /&gt;
여기서는 많은 GitHub Pages 블로그에서 사용하고 있는 Disqus 댓글 서비스를 연동하도록 한다.&lt;/p&gt;

&lt;p&gt;Disqus에서 제공하는 댓글 서비스는 간단한 블로그를 위해서는 무료 정책으로 충분하다.&lt;br /&gt;
혹시 다른 부가적인 기능이나 특징이 필요하다면, &lt;a href=&quot;https://disqus.com/pricing/&quot;&gt;여기&lt;/a&gt;에서 가격 정책을 확인할 수 있다.&lt;/p&gt;

&lt;h2 id=&quot;disqus-가입-및-설정&quot;&gt;Disqus 가입 및 설정&lt;/h2&gt;

&lt;p&gt;블로그는 이미 준비되어 있다고 가정하고, 일단 Disqus에 가입해서 블로그 정보를 설정해야 한다.&lt;br /&gt;
&lt;a href=&quot;https://disqus.com/&quot;&gt;Disqus&lt;/a&gt;에 접속해 이메일 또는 페이스북, 트위터, 구글 등의 계정을 통해 가입한다.&lt;/p&gt;

&lt;p&gt;가입 후에 홈페이지에서 ‘GET STARTED’ &amp;gt; ‘I want to install Disqus on my site’ 순서로 버튼을 누른다.&lt;br /&gt;
생성 화면에서 ‘Website Name’은 Disqus의 관리자 사이트로 이용되므로 블로그와 관련된 이름으로 작성한다.&lt;br /&gt;
이때, 생성되는 URL은 Disqus에서 유일해야 하므로 유의하도록 한다.&lt;br /&gt;
언어는 현재 한국어를 제공하지 않으므로 영어로 선택해 진행한다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;assets/disqus_guide/1.png&quot; alt=&quot;Disqus Guide Step 1&quot; /&gt;
 &lt;/p&gt;

&lt;p&gt;플랜은 ‘Basic’ 플랜의 ‘Subscribe Now’ 버튼을 눌러 무료 플랜을 선택한다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;assets/disqus_guide/2.png&quot; alt=&quot;Disqus Guide Step 2&quot; /&gt;
 &lt;/p&gt;

&lt;p&gt;플랫폼 선택 화면에서 ‘Jekyll’ 항목을 누른다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;assets/disqus_guide/3.png&quot; alt=&quot;Disqus Guide Step 3&quot; /&gt;
 &lt;/p&gt;

&lt;p&gt;그러면 Jekyll에 댓글 서비스를 설정하는 방법이 나오는데, 아래에서 알아보도록 한다.&lt;br /&gt;
여기서는 &lt;strong&gt;2번 항목의 ‘Universal Embed Code’ 링크&lt;/strong&gt;만 새 창에 띄워 놓고, ‘Configure’ 버튼을 누른다.&lt;br /&gt;
해당 링크는 추후 댓글 서비스를 설정할 때 필요한 페이지로, &lt;strong&gt;설정한 사이트마다 다른 코드가 생성되므로 미리 띄워 놓는다&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;assets/disqus_guide/4.png&quot; alt=&quot;Disqus Guide Step 4&quot; /&gt;
 &lt;/p&gt;

&lt;p&gt;설정 화면에서 필요한 항목들을 작성하도록 한다.&lt;br /&gt;
&lt;strong&gt;‘Website URL’ 항목이 실제 연동할 사이트 주소에 해당한다&lt;/strong&gt;.&lt;br /&gt;
여기서 ‘Comment Policy’ 관련 항목들은 입력하지 않으면, 알아서 Disqus 정책에 따라 적용된다.&lt;br /&gt;
‘Complete Setup’ 버튼을 누르면, Disqus에 사이트 설정이 완료된다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;assets/disqus_guide/5.png&quot; alt=&quot;Disqus Guide Step 5&quot; /&gt;
 &lt;/p&gt;

&lt;p&gt;사이트 설정이 완료된 후에는 언제든지 Admin 화면으로 접속해 사이트를 관리할 수 있다.&lt;br /&gt;
생성 시에 설정한 것들 외에도 다양한 옵션이 있으니 살펴보는 것도 좋을 것 같다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;assets/disqus_guide/6.png&quot; alt=&quot;Disqus Guide Step 6&quot; /&gt;
&lt;img src=&quot;assets/disqus_guide/7.png&quot; alt=&quot;Disqus Guide Step 7&quot; /&gt;
 &lt;/p&gt;

&lt;h2 id=&quot;disqus-연동&quot;&gt;Disqus 연동&lt;/h2&gt;

&lt;p&gt;앞서 띄워 놓은 ‘Universal Embed Code’ 링크 페이지를 열어 보면, 첫 1번 항목에 소스 코드가 있을 것이다.&lt;br /&gt;
이 소스 코드가 &lt;strong&gt;Disqus 댓글 영역이 생기는 부분&lt;/strong&gt;이다.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;disqus_thread&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;script&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;cm&quot;&gt;/**
  *  RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS.
  *  LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/&lt;/span&gt;
  &lt;span class=&quot;cm&quot;&gt;/*
  var disqus_config = function () {
    this.page.url = PAGE_URL;  // Replace PAGE_URL with your page's canonical URL variable
    this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable
  };
  */&lt;/span&gt;

  &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// DON'T EDIT BELOW THIS LINE&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;d&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;s&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;createElement&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;script&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;src&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;https://jamesu-blog.disqus.com/embed.js&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;setAttribute&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;data-timestamp&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Date&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;());&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;head&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;body&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;appendChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;})();&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;noscript&amp;gt;&lt;/span&gt;Please enable JavaScript to view the &lt;span class=&quot;nt&quot;&gt;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;https://disqus.com/?ref_noscript&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;comments powered by Disqus.&lt;span class=&quot;nt&quot;&gt;&amp;lt;/a&amp;gt;&amp;lt;/noscript&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;만약, 해당 링크 페이지를 별도로 띄워 놓지 않았다면, 위 코드를 그대로 붙여 넣은 후, 15번째 줄에 &lt;code class=&quot;highlighter-rouge&quot;&gt;s.src&lt;/code&gt;에 대입하는 부분에 블로그에 해당하는 Disqus 관리자 사이트 URL을 입력하면 된다.&lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;jamesu-blog&lt;/code&gt; 대신, 해당하는 &lt;strong&gt;관리자 사이트 URL&lt;/strong&gt;을 입력하도록 한다.&lt;/p&gt;

&lt;p&gt;그리고 Disqus는 다음과 같은 추가 작업을 추천한다.&lt;br /&gt;
(전체 내용은 &lt;a href=&quot;https://help.disqus.com/en/articles/1717137-use-configuration-variables-to-avoid-split-threads-and-missing-comments&quot;&gt;이 문서&lt;/a&gt;를 참고한다.)&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;This works well for some sites, however, this method of creating threads can lead to duplicate “split threads” for the same page of content, especially when your site accepts many different URLs for the same page of content.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;즉, 같은 컨텐츠이지만 접근하는 URL이 달라 서로 다른 쓰레드(댓글 그룹)가 생성될 수도 있다는 말이다.&lt;/p&gt;

&lt;p&gt;예를 들어, 로컬 환경에서 띄운 블로그와 실제 배포된 블로그에 각각 접근했을 때, 서로 다른 쓰레드가 생성될 수 있다.&lt;br /&gt;
로컬 환경은 URL이 &lt;code class=&quot;highlighter-rouge&quot;&gt;localhost&lt;/code&gt;로 시작하고, 배포된 블로그는 &lt;code class=&quot;highlighter-rouge&quot;&gt;실제 도메인&lt;/code&gt;으로 시작하기 때문이다.&lt;br /&gt;
서로 다른 쓰레드는 같은 컨텐츠임에도 불구하고, &lt;strong&gt;댓글의 불일치&lt;/strong&gt;를 발생시킬 수 있다.&lt;/p&gt;

&lt;p&gt;이런 현상을 방지하기 위해, 아래와 같이 주석을 해제하여 &lt;code class=&quot;highlighter-rouge&quot;&gt;disqus_config&lt;/code&gt; 함수를 정의하도록 한다.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;disqus_thread&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;script&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;cm&quot;&gt;/**
  *  RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS.
  *  LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;disqus_config&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;page&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;url&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;https://jamesu.blog{{ page.url }}&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;page&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;identifier&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;{{ page.id }}&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;

  &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// DON'T EDIT BELOW THIS LINE&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;d&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;s&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;createElement&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;script&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;src&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;https://jamesu-blog.disqus.com/embed.js&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;setAttribute&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;data-timestamp&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Date&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;());&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;head&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;body&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;appendChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;})();&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;noscript&amp;gt;&lt;/span&gt;Please enable JavaScript to view the &lt;span class=&quot;nt&quot;&gt;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;https://disqus.com/?ref_noscript&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;comments powered by Disqus.&lt;span class=&quot;nt&quot;&gt;&amp;lt;/a&amp;gt;&amp;lt;/noscript&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;this.page.url&lt;/code&gt; 변수에는 동일한 URL을 가리키도록, 도메인 주소와 &lt;code class=&quot;highlighter-rouge&quot;&gt;{{ page.url }}&lt;/code&gt;을 이용한다.&lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;this.page.identifier&lt;/code&gt; 변수에는 &lt;code class=&quot;highlighter-rouge&quot;&gt;{{ page.id }}&lt;/code&gt;를 이용해 유일한 페이지 ID를 대입한다.&lt;/p&gt;

&lt;h3 id=&quot;댓글-영역을-꾸미고-싶다면&quot;&gt;댓글 영역을 꾸미고 싶다면&lt;/h3&gt;

&lt;p&gt;위 코드에서 보이는 것처럼, &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;div id=&quot;disqus_thread&quot;&amp;gt;&amp;lt;/div&amp;gt;&lt;/code&gt; 요소 내부에 댓글 영역이 생긴다.&lt;br /&gt;
댓글 영역을 꾸미고 싶다면, 다음과 같이 &lt;code class=&quot;highlighter-rouge&quot;&gt;disqus_thread&lt;/code&gt; ID를 이용해 원하는 대로 꾸밀 수도 있다.&lt;br /&gt;
(여기서는 댓글 영역에 회색 외곽선을 추가했다.)&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;assets/disqus_guide/8.png&quot; alt=&quot;Disqus Guide Step 8&quot; /&gt;
 &lt;/p&gt;

&lt;h2 id=&quot;그-외-활용&quot;&gt;그 외 활용&lt;/h2&gt;

&lt;p&gt;기본적인 댓글 기능은 위와 같이 설정해서 사용할 수 있다.&lt;br /&gt;
만약, 포스트별로 댓글 기능의 사용 유무를 정하고 싶다면, &lt;a href=&quot;https://jekyllrb.com/docs/front-matter/&quot;&gt;YAML Front Matter&lt;/a&gt;의 변수를 이용하면 된다.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;---
layout: default
comments: true
# other options
---
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;comments&lt;/code&gt; 변수와 같이, 페이지 변수를 설정하고 그것에 따라 댓글 영역 코드를 넣을지 말지를 결정하면 된다.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;{% if page.comments %}
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;disqus_thread&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;script&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;cm&quot;&gt;/**
    *  RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS.
    *  LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;disqus_config&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;page&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;url&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;https://jamesu.blog{{ page.url }}&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;page&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;identifier&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;{{ page.id }}&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;

    &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// DON'T EDIT BELOW THIS LINE&lt;/span&gt;
      &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;d&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;s&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;createElement&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;script&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;src&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;https://jamesu-blog.disqus.com/embed.js&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;setAttribute&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;data-timestamp&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Date&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;());&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;head&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;body&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;appendChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;})();&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;noscript&amp;gt;&lt;/span&gt;Please enable JavaScript to view the &lt;span class=&quot;nt&quot;&gt;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;https://disqus.com/?ref_noscript&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;comments powered by Disqus.&lt;span class=&quot;nt&quot;&gt;&amp;lt;/a&amp;gt;&amp;lt;/noscript&amp;gt;&lt;/span&gt;
{% endif %}
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;이 밖에도 Disqus는 댓글 서비스와 관련해서 다양한 옵션을 제공하므로, 홈페이지를 참고하길 바란다.&lt;br /&gt;
또한, Disqus 관리자 사이트에서 댓글을 확인하고 관리할 수 있으므로 활용하길 바란다.&lt;/p&gt;

&lt;p&gt;성공적으로 댓글 서비스를 연동해 이용하길 바라며, 더불어 본 블로그도 댓글이 활성화되길 바란다. 😅&lt;/p&gt;</content><author><name>jamesujeon</name></author><category term="github-pages" /><category term="jekyll" /><category term="disqus" /><summary type="html">별도의 댓글 서비스를 이용해야 하는 이유</summary></entry><entry><title type="html">Codeforces 코딩 문제 풀기: 230B - T-primes</title><link href="https://jamesujeon.github.io/posts/2019/12/23/codeforces-coding-problem-230b-t-primes/" rel="alternate" type="text/html" title="Codeforces 코딩 문제 풀기: 230B - T-primes" /><published>2019-12-23T00:00:00+09:00</published><updated>2019-12-23T00:00:00+09:00</updated><id>https://jamesujeon.github.io/posts/2019/12/23/codeforces-coding-problem-230b-t-primes</id><content type="html" xml:base="https://jamesujeon.github.io/posts/2019/12/23/codeforces-coding-problem-230b-t-primes/">&lt;p&gt;&lt;img src=&quot;assets/codeforces_230b_t-primes.png&quot; alt=&quot;230B - T-primes&quot; title=&quot;230B - T-primes&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;문제-파악&quot;&gt;문제 파악&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://codeforces.com/problemset/problem/230/B&quot; target=&quot;_blank&quot;&gt;T-primes 문제 링크&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;정확히 3개의 소인수로 분해되는 숫자를 T-prime이라 정의한다.&lt;br /&gt;
이때, 주어진 숫자들이 T-prime이면 “YES”를, 아니라면 “NO”를 출력한다.&lt;/p&gt;

&lt;h2 id=&quot;문제-풀이&quot;&gt;문제 풀이&lt;/h2&gt;

&lt;p&gt;어떤 숫자 T-prime인지 판별하려면, 그 조건을 명세화해야 한다.&lt;/p&gt;

&lt;p&gt;소인수가 3개가 되기 위해서, 1과 자기 자신을 제외한 숫자 1개는 &lt;strong&gt;제곱근&lt;/strong&gt;이 되어야 한다.&lt;br /&gt;
또한, 그 제곱근이 소수여야 더 이상 소인수로 분해되지 않으므로, 3개의 소인수가 남을 수 있다.&lt;br /&gt;
따라서, T-prime이 되기 위한 조건은 다음과 같다.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;대상 수의 제곱근은 &lt;strong&gt;소수&lt;/strong&gt;여야 한다.&lt;/li&gt;
  &lt;li&gt;대상 수의 제곱근을 &lt;strong&gt;정수화&lt;/strong&gt;하고 다시 제곱했을 때, 본래의 수와 동일해야 한다. (제곱근이 정수여야 한다.)&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;이때, 제곱근이 소수인지 판별하는 로직이 필요하다.&lt;br /&gt;
공간이 충분할 때, 효율적이고 빠른 방법으로 &lt;a href=&quot;https://ko.wikipedia.org/wiki/%EC%97%90%EB%9D%BC%ED%86%A0%EC%8A%A4%ED%85%8C%EB%84%A4%EC%8A%A4%EC%9D%98_%EC%B2%B4&quot;&gt;에라토스테네스의 체(Sieve of Eratosthenes)&lt;/a&gt;가 있다.&lt;/p&gt;

&lt;p&gt;에라토스테네스의 체는 &lt;strong&gt;특정 범위의 수를 체로 걸러내듯이 소수가 아닌 수를 걸러 소수만 남겨내는 방법&lt;/strong&gt;이다.&lt;br /&gt;
이때, 작은 수부터 차례대로 증가시키면서 소수인 경우, 범위 내 배수를 모두 소수에서 걸러내는 방식을 취한다. (배수는 분해가 된다는 뜻이므로, 소수에 해당하지 않는다.)&lt;br /&gt;
특정 범위의 수 목록에 소수 여부를 미리 저장해두고, 원하는 수의 소수 여부만 확인하므로 매우 빠르게 판별할 수 있다.&lt;br /&gt;
단순히 적은 횟수만 소수 판별을 한다면, 에라토스테네스의 체는 굳이 필요하지 않다.&lt;br /&gt;
소수 판별을 많이 해야 할 때, 그때그때 소수를 판별한다면 시간이 오래 걸리므로, 소수 여부를 미리 계산하는 것이다.&lt;/p&gt;

&lt;p&gt;에라토스테네스의 체를 구할 때, 연산을 최소화하기 위해 대상 수의 제곱근까지만 순회하면 모든 소수를 구할 수 있다.&lt;br /&gt;
이 문제에서는 &lt;strong&gt;대상 수의 제곱근의 소수 여부&lt;/strong&gt;가 궁금하므로, &lt;strong&gt;소수 여부를 구하는 범위를 제곱근까지로 한정&lt;/strong&gt;지었다.&lt;/p&gt;

&lt;p&gt;만약 대상 수까지의 소수 여부를 구한다고 하면, 다음과 같이 구할 수 있다.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;target&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1000000000000&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;primes&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;False&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;target&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;limit&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;target&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;**&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;.5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;limit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;primes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]:&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;j&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;**&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;target&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;primes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;False&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;풀이-소스&quot;&gt;풀이 소스&lt;/h2&gt;

&lt;p&gt;문제 풀이 환경: Python 3.7&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;n&quot;&gt;_&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;input&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;input&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;split&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;limit&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1000000000000&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;**&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;.5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;primes&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;False&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;limit&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;limit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;primes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]:&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;j&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;**&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;limit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;primes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;False&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;num&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;sqrt&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;num&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;**&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;.5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;YES&quot;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;primes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sqrt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sqrt&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;**&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;num&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;NO&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;</content><author><name>jamesujeon</name></author><category term="coding-problem" /><category term="codeforces" /><category term="python" /><summary type="html"></summary></entry><entry><title type="html">Linux 부팅 시, 서비스 자동으로 시작하기</title><link href="https://jamesujeon.github.io/posts/2019/12/20/starting-service-automatically-on-boot-in-linux/" rel="alternate" type="text/html" title="Linux 부팅 시, 서비스 자동으로 시작하기" /><published>2019-12-20T00:00:00+09:00</published><updated>2019-12-20T00:00:00+09:00</updated><id>https://jamesujeon.github.io/posts/2019/12/20/starting-service-automatically-on-boot-in-linux</id><content type="html" xml:base="https://jamesujeon.github.io/posts/2019/12/20/starting-service-automatically-on-boot-in-linux/">&lt;p&gt;&lt;a href=&quot;https://jamesu.dev/posts/2019/12/19/start-containers-automatically/&quot;&gt;이전 글&lt;/a&gt;에서 Docker 컨테이너를 자동으로 시작하는 법을 알았다.&lt;br /&gt;
그렇다면, 서버가 죽었을 때 Docker가 시작되어야 Docker 컨테이너 또한 재시작을 할 수 있지 않을까?&lt;/p&gt;

&lt;p&gt;이 글에서는 Docker를 자주 사용하는 OS인 Linux 상에서 서비스를 자동으로 시작하는 법을 알아보도록 한다.&lt;br /&gt;
모두 적용한다면, 서버가 재시작됐을 때, Docker 서비스도 재시작되고, Docker 컨테이너도 재시작될 것이다.&lt;/p&gt;

&lt;h2 id=&quot;linux-배포판별-버전별-차이&quot;&gt;Linux 배포판별, 버전별 차이&lt;/h2&gt;

&lt;p&gt;이미 알고 있는 것처럼 Linux는 Linux Kernel을 기반으로 다양한 배포판이 존재한다.&lt;br /&gt;
그런 배포판들은 제작자의 입맛에 맞춰 만들어진 것이므로 &lt;strong&gt;배포판별로 명령어가 상이할 수 있다&lt;/strong&gt;.&lt;br /&gt;
또한, 각 배포판은 버전이 오름에 따라 변화를 하면서 명렁어가 바뀌기도 한다.&lt;/p&gt;

&lt;p&gt;이처럼 배포판별, 버전별로 명렁어 차이가 존재할 수 있기 때문에 현재 사용하는 것에 맞춰 알아보고 사용해야 한다.&lt;br /&gt;
여기서는 자주 사용하는 명령어를 바탕으로 설명하며, 동일한 명령어가 존재하지 않을 수도 있으니 유의하길 바란다.&lt;/p&gt;

&lt;p&gt;한 쪽에 있는 명령어를 사용하는 배포판에서는 동일한 명령어들을 사용하므로, 같은 쪽의 명령어를 사용하면 된다.&lt;/p&gt;

&lt;h2 id=&quot;서비스-관리-명령어&quot;&gt;서비스 관리 명령어&lt;/h2&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;service&lt;/code&gt; vs &lt;code class=&quot;highlighter-rouge&quot;&gt;systemctl&lt;/code&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;서비스 상태 확인 : &lt;code class=&quot;highlighter-rouge&quot;&gt;service 서비스명 status&lt;/code&gt; 또는 &lt;code class=&quot;highlighter-rouge&quot;&gt;systemctl status 서비스명&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;서비스 시작 : &lt;code class=&quot;highlighter-rouge&quot;&gt;service 서비스명 start&lt;/code&gt; 또는 &lt;code class=&quot;highlighter-rouge&quot;&gt;systemctl start 서비스명&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;서비스 정지 : &lt;code class=&quot;highlighter-rouge&quot;&gt;service 서비스명 stop&lt;/code&gt; 또는 &lt;code class=&quot;highlighter-rouge&quot;&gt;systemctl stop 서비스명&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;서비스 재시작 : &lt;code class=&quot;highlighter-rouge&quot;&gt;service 서비스명 restart&lt;/code&gt; 또는 &lt;code class=&quot;highlighter-rouge&quot;&gt;systemctl restart 서비스명&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;서비스-자동-시작-명령어&quot;&gt;서비스 자동 시작 명령어&lt;/h2&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;chkconfig&lt;/code&gt; vs &lt;code class=&quot;highlighter-rouge&quot;&gt;systemctl&lt;/code&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;자동 시작 확인 : &lt;code class=&quot;highlighter-rouge&quot;&gt;chkconfig 서비스명 --list&lt;/code&gt; 또는 &lt;code class=&quot;highlighter-rouge&quot;&gt;systemctl is-enabled 서비스명&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;자동 시작 설정 : &lt;code class=&quot;highlighter-rouge&quot;&gt;chkconfig 서비스명 on&lt;/code&gt; 또는 &lt;code class=&quot;highlighter-rouge&quot;&gt;systemctl enable 서비스명&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;자동 시작 해제 : &lt;code class=&quot;highlighter-rouge&quot;&gt;chkconfig 서비스명 off&lt;/code&gt; 또는 &lt;code class=&quot;highlighter-rouge&quot;&gt;systemctl disable 서비스명&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name>jamesujeon</name></author><category term="linux" /><category term="command" /><summary type="html">이전 글에서 Docker 컨테이너를 자동으로 시작하는 법을 알았다. 그렇다면, 서버가 죽었을 때 Docker가 시작되어야 Docker 컨테이너 또한 재시작을 할 수 있지 않을까?</summary></entry><entry><title type="html">Codeforces 코딩 문제 풀기: 4C - Registration system</title><link href="https://jamesujeon.github.io/posts/2019/12/20/codeforces-coding-problem-4c-registration-system/" rel="alternate" type="text/html" title="Codeforces 코딩 문제 풀기: 4C - Registration system" /><published>2019-12-20T00:00:00+09:00</published><updated>2019-12-20T00:00:00+09:00</updated><id>https://jamesujeon.github.io/posts/2019/12/20/codeforces-coding-problem-4c-registration-system</id><content type="html" xml:base="https://jamesujeon.github.io/posts/2019/12/20/codeforces-coding-problem-4c-registration-system/">&lt;p&gt;&lt;img src=&quot;assets/codeforces_4c_registration_system.png&quot; alt=&quot;4C - Registration system&quot; title=&quot;4C - Registration system&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;문제-파악&quot;&gt;문제 파악&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://codeforces.com/problemset/problem/4/C&quot; target=&quot;_blank&quot;&gt;Registration system 문제 링크&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;사용자 이름을 등록하는 시스템으로 중복 이름을 허용하지 않는다.&lt;br /&gt;
다수의 이름을 입력받아 차례대로 시스템에 등록을 요청해 정상적으로 등록되는 경우, “OK”를 출력한다.&lt;br /&gt;
이름이 중복되는 경우, 이름 뒤에 숫자를 추가해 등록하고 변경된 이름을 출력한다.&lt;br /&gt;
중복되는 이름이 다수인 경우, 차례대로 숫자를 증가시켜 추가한다.&lt;br /&gt;
입력하는 이름은 모두 소문자 영문자만 가능하다. (숫자를 입력하는 경우가 없다.)&lt;/p&gt;

&lt;h2 id=&quot;문제-풀이&quot;&gt;문제 풀이&lt;/h2&gt;

&lt;p&gt;중복되는 이름이 다수인 경우에 차례대로 숫자를 증가시켜 추가해야 하므로, 중복될 때마다 그 수를 기억해야 한다.&lt;br /&gt;
그러면, 저장할 데이터는 이름과 중복 수가 되고, 이를 효율적으로 관리하기 위해 &lt;a href=&quot;https://namu.wiki/w/%ED%95%B4%EC%8B%9C&quot;&gt;해시&lt;/a&gt; 테이블을 사용할 수 있다.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;해시 테이블&lt;/strong&gt;은 Key-Value 구조로 데이터를 보관하는 자료구조로, Key를 위해 해시 함수를 이용한다.&lt;br /&gt;
일반적으로 별도의 해시 함수를 구현하지 않으면, 객체의 주소값 등을 Key로 이용할 수 있다.&lt;/p&gt;

&lt;p&gt;Python에서는 이러한 해시 테이블로 이용할 수 있는 자료구조로 &lt;strong&gt;Dictionary&lt;/strong&gt;라 하는 &lt;code class=&quot;highlighter-rouge&quot;&gt;dict&lt;/code&gt;가 존재한다.&lt;br /&gt;
이 문제에서 입력받는 이름을 Key로, 중복 수를 Value로 사용하면, 효율적으로 데이터를 보관할 수 있다.&lt;br /&gt;
키를 바탕으로 값에 접근하기 때문에 순차적으로 검색해서 원하는 값을 얻는 배열에 비해 효율적이고, 편리하다.&lt;/p&gt;

&lt;p&gt;입력받은 이름들을 차례대로 Dictionary에 존재하는지 확인하고, 존재하면 중복 수를 증가시키고, 존재하지 않으면 Dictionary에 추가한다.
키로 존재 여부를 확인하고, 키로 값에 접근하기 때문에 속도가 매우 빠르다.&lt;br /&gt;
중복되는 경우, 중복 수를 이용해 이름을 변경하도록 한다.&lt;/p&gt;

&lt;h2 id=&quot;풀이-소스&quot;&gt;풀이 소스&lt;/h2&gt;

&lt;p&gt;문제 풀이 환경: Python 3.7&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;input&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;names&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;input&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)]&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;name_dict&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;dict&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;enumerate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;names&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name_dict&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;names&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name_dict&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;name_dict&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;names&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;OK&quot;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;name_dict&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;names&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;</content><author><name>jamesujeon</name></author><category term="coding-problem" /><category term="codeforces" /><category term="python" /><summary type="html"></summary></entry><entry><title type="html">Docker 컨테이너 자동으로 시작하기</title><link href="https://jamesujeon.github.io/posts/2019/12/19/starting-container-automatically/" rel="alternate" type="text/html" title="Docker 컨테이너 자동으로 시작하기" /><published>2019-12-19T00:00:00+09:00</published><updated>2019-12-19T00:00:00+09:00</updated><id>https://jamesujeon.github.io/posts/2019/12/19/starting-container-automatically</id><content type="html" xml:base="https://jamesujeon.github.io/posts/2019/12/19/starting-container-automatically/">&lt;p&gt;Docker가 재시작되지 않고 항상 켜져있을 수 있다면, 컨테이너를 재시작할 필요는 없을 것이다.&lt;br /&gt;
하지만, Docker를 구동하고 있는 서버가 불의의 사고 또는 고의의 사고로 갑작스럽게 종료될 수 있는 가능성은 존재한다.&lt;br /&gt;
따라서, 서버가 재시작될 때 Docker도 재시작되고, 기존에 Docker가 유지하던 컨테이너 또한 재시작되도록 해야 한다.&lt;/p&gt;

&lt;p&gt;Docker를 재시작하는 방법은 다음으로 미루고, 여기서는 Docker 컨테이너를 재시작하는 방법을 다룬다.&lt;/p&gt;

&lt;h2 id=&quot;기본적인-docker-run&quot;&gt;기본적인 &lt;code class=&quot;highlighter-rouge&quot;&gt;docker run&lt;/code&gt;&lt;/h2&gt;

&lt;p&gt;Docker에서 특정 옵션 없이 기본 명령어인 &lt;code class=&quot;highlighter-rouge&quot;&gt;run&lt;/code&gt;으로 컨테이너를 구동한 경우, Docker가 재시작한다면 컨테이너는 자동으로 시작되지 않는다.&lt;/p&gt;

&lt;p&gt;다음과 같이, 재시작 관련 옵션 없이 컨테이너가 종료되지 않도록 구동시키고, Docker를 재시작한다.&lt;br /&gt;
(이미지는 Public Repository로부터 &lt;code class=&quot;highlighter-rouge&quot;&gt;centos&lt;/code&gt;를 &lt;code class=&quot;highlighter-rouge&quot;&gt;docker pull centos&lt;/code&gt;로 받아 사용한다.)&lt;br /&gt;
(Docker 재시작 명령어는 OS 별로 상이할 수 있다.)&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;docker run -d --name test centos tail -f /dev/null
docker ps -a
service docker restart
docker ps -a&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;마지막 &lt;code class=&quot;highlighter-rouge&quot;&gt;docker ps -a&lt;/code&gt; 명령어를 통해 &lt;code class=&quot;highlighter-rouge&quot;&gt;test&lt;/code&gt; 컨테이너가 종료 상태인 것을 확인할 수 있다.&lt;/p&gt;

&lt;p&gt;이는 재시작 옵션(&lt;code class=&quot;highlighter-rouge&quot;&gt;--restart&lt;/code&gt;)에 기본값으로 &lt;code class=&quot;highlighter-rouge&quot;&gt;no&lt;/code&gt;가 들어가기 때문이다.&lt;br /&gt;
말그대로 재시작을 하지 않겠다는 뜻이다.&lt;/p&gt;

&lt;h2 id=&quot;재시작-옵션과-함께&quot;&gt;재시작 옵션과 함께&lt;/h2&gt;

&lt;p&gt;위 옵션을 주면, Docker가 갑작스럽게 종료되었다가 다시 시작할 때, 컨테이너 또한 재시작하게 된다.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;docker run -d --restart always --name test centos tail -f /dev/null
docker ps -a
service docker restart
docker ps -a&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Docker 재시작 시간에 맞춰 &lt;code class=&quot;highlighter-rouge&quot;&gt;test&lt;/code&gt; 컨테이너도 재시작된 것을 확인할 수 있다.&lt;/p&gt;

&lt;p&gt;이 외에도 다른 재시작 옵션이 존재한다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;no&lt;/code&gt; : 말그대로 NO (기본값)&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;on-failure&lt;/code&gt; : 에러로 인해 종료될 시 재시작한다.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;always&lt;/code&gt; : 항상 재시작한다. 수동으로 종료한 경우, Docker가 재시작되면 같이 재시작된다.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;unless-stopped&lt;/code&gt; : 컨테이너가 종료되지 않는다면, 항상 재시작하한다. 종료되었다면, 직접 시작하기 전까지는 Docker가 재시작되도 컨테이너는 재시작되지 않는다.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;자세한 내용은 &lt;a href=&quot;https://docs.docker.com/config/containers/start-containers-automatically/&quot;&gt;Docker Documentation&lt;/a&gt;에서 확인할 수 있다. (영어 주의 ⚠️)&lt;/p&gt;

&lt;h2 id=&quot;그-외-방법&quot;&gt;그 외 방법&lt;/h2&gt;

&lt;p&gt;이렇게 컨테이너를 구동할 때마다 재시작 옵션을 주는 방법밖에 없을까?&lt;/p&gt;

&lt;p&gt;조건에 Docker를 걸어둔 일종의 서비스 파일을 작성하면 가능하다.&lt;br /&gt;
이는 컨테이너를 항상 재시작할 때는 문제 없지만, 개인적으로는 직접 옵션을 주는 것을 선호한다.&lt;br /&gt;
옵션에 따라 원하는 동작이 명확하고, 누군가는 서비스 파일을 인지하지 못할 수도 있기 때문이다.&lt;/p&gt;

&lt;p&gt;취향에 따라 방법을 선택해 적용하도록 한다.&lt;br /&gt;
참고로 서비스 파일을 작성한다면, OS마다 서비스 등록법이 상이할 수 있으니 유의해서 적용하길 바란다.&lt;/p&gt;</content><author><name>jamesujeon</name></author><category term="docker" /><category term="container" /><summary type="html">Docker가 재시작되지 않고 항상 켜져있을 수 있다면, 컨테이너를 재시작할 필요는 없을 것이다. 하지만, Docker를 구동하고 있는 서버가 불의의 사고 또는 고의의 사고로 갑작스럽게 종료될 수 있는 가능성은 존재한다. 따라서, 서버가 재시작될 때 Docker도 재시작되고, 기존에 Docker가 유지하던 컨테이너 또한 재시작되도록 해야 한다.</summary></entry><entry><title type="html">Codeforces 코딩 문제 풀기: 337A - Puzzles</title><link href="https://jamesujeon.github.io/posts/2019/12/19/codeforces-coding-problem-337a-puzzles/" rel="alternate" type="text/html" title="Codeforces 코딩 문제 풀기: 337A - Puzzles" /><published>2019-12-19T00:00:00+09:00</published><updated>2019-12-19T00:00:00+09:00</updated><id>https://jamesujeon.github.io/posts/2019/12/19/codeforces-coding-problem-337a-puzzles</id><content type="html" xml:base="https://jamesujeon.github.io/posts/2019/12/19/codeforces-coding-problem-337a-puzzles/">&lt;p&gt;&lt;img src=&quot;assets/codeforces_337a_puzzles.png&quot; alt=&quot;337A - Puzzles&quot; title=&quot;337A - Puzzles&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;문제-파악&quot;&gt;문제 파악&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://codeforces.com/problemset/problem/337/A&quot; target=&quot;_blank&quot;&gt;Puzzles 문제 링크&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;첫 줄에 학생 수와 상점에서 판매하는 직소 퍼즐의 수가 주어지고, 둘째 줄에 각 퍼즐의 조각 수가 주어진다.&lt;br /&gt;
학생 수에 맞춰 다수의 직소 퍼즐을 구매할 때, &lt;strong&gt;퍼즐 간의 최대 조각 수 차이가 가장 작을 때의 조각 수 차이&lt;/strong&gt;를 구해야 한다.&lt;br /&gt;
판매하는 퍼즐의 수는 학생 수보다 크거나 같으므로, 퍼즐 간의 최대 조각 수 차이는 여러 경우가 나올 수 있기 때문이다.&lt;/p&gt;

&lt;h2 id=&quot;문제-풀이&quot;&gt;문제 풀이&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Greedy_algorithm&quot;&gt;탐욕(Greedy) 알고리즘&lt;/a&gt;의 접근 방식을 이용해 풀이할 수 있다.&lt;br /&gt;
각 경우에서 최적해를 먼저 구하고, 구한 최적해들을 이용해 최종 최적해를 구한다.&lt;/p&gt;

&lt;p&gt;무작위로 학생 수에 맞춰 퍼즐을 선택하는 것은 경우의 수가 너무 많고 효율이 떨어진다.&lt;br /&gt;
퍼즐을 조각 수를 기준으로 정렬한다면, 최대 조각 수 차이가 가장 작게 되도록 퍼즐끼리 인접한 그룹을 형성할 수 있다.&lt;br /&gt;
&lt;strong&gt;해당 그룹에서 최대 조각 수 차이를 구하고, 구한 최대 조각 수 차이들 중에 가장 작은 값이 정답이 된다.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;각 그룹은 이미 조각 수에 따라 정렬되어 있으므로, &lt;strong&gt;최대 조각 수 차이는 그룹의 끝과 처음의 값 차이&lt;/strong&gt;로 구할 수 있다.&lt;/p&gt;

&lt;p&gt;예를 들어, 주어진 예시를 정렬 후에 각 경우에 따라 추적하면 다음과 같다.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;5 7 10 10 12 22 : 정렬된 퍼즐 조각 수 목록
5 7 10 10       : 최대 조각 수 차이 = 10 - 5 = 5
  7 10 10 12    : 최대 조각 수 차이 = 12 - 7 = 5
    10 10 12 22 : 최대 조각 수 차이 = 22 - 10 = 12&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;따라서, 정답에 해당하는 퍼즐 그룹은 &lt;code class=&quot;highlighter-rouge&quot;&gt;5 7 10 10&lt;/code&gt; 또는 &lt;code class=&quot;highlighter-rouge&quot;&gt;7 10 10 12&lt;/code&gt;가 되고, 가장 작은 값은 &lt;code class=&quot;highlighter-rouge&quot;&gt;5&lt;/code&gt;가 된다.&lt;/p&gt;

&lt;h2 id=&quot;풀이-소스&quot;&gt;풀이 소스&lt;/h2&gt;

&lt;p&gt;문제 풀이 환경: Python 3.7&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;input&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;split&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;counts&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;sorted&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;input&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;split&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())))&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;result&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;min&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;counts&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;counts&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;counts&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;</content><author><name>jamesujeon</name></author><category term="coding-problem" /><category term="codeforces" /><category term="python" /><summary type="html"></summary></entry><entry><title type="html">Codeforces 코딩 문제 풀기: 58A - Chat room</title><link href="https://jamesujeon.github.io/posts/2019/12/10/codeforces-coding-problem-58a-chat-room/" rel="alternate" type="text/html" title="Codeforces 코딩 문제 풀기: 58A - Chat room" /><published>2019-12-10T00:00:00+09:00</published><updated>2019-12-10T00:00:00+09:00</updated><id>https://jamesujeon.github.io/posts/2019/12/10/codeforces-coding-problem-58a-chat-room</id><content type="html" xml:base="https://jamesujeon.github.io/posts/2019/12/10/codeforces-coding-problem-58a-chat-room/">&lt;p&gt;&lt;img src=&quot;assets/codeforces_58a_chat_room.png&quot; alt=&quot;58A - Chat room&quot; title=&quot;58A - Chat room&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;문제-파악&quot;&gt;문제 파악&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://codeforces.com/problemset/problem/58/A&quot; target=&quot;_blank&quot;&gt;Chat room 문제 링크&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;입력한 문자열에 “hello” 문자열의 문자들이 분해되어 차례대로 존재하는지 판단하는 문제이다.&lt;br /&gt;
각 문자 사이에는 다른 문자가 존재할 수 있으며, 단지 한 글자씩 차례대로 추출해 “hello” 문자열을 완성할 수 있으면 된다.&lt;/p&gt;

&lt;p&gt;예를 들어,&lt;br /&gt;
“ahhellllloou” 문자열은 2번째 ‘h’, 4번째 ‘e’, 5~6번째 “ll”, 10번째 ‘o’까지 차례대로 존재하므로 “YES”를 출력한다.&lt;br /&gt;
반면에, “hlelo” 문자열은 1번째 ‘h’, 3번째 ‘e’, 4번째 ‘l’까지 만족하지만, 그 이후로 다른 ‘l’이 없어 “NO”를 출력한다.&lt;/p&gt;

&lt;h2 id=&quot;문제-풀이&quot;&gt;문제 풀이&lt;/h2&gt;

&lt;p&gt;이 문제는 &lt;a href=&quot;https://en.wikipedia.org/wiki/Greedy_algorithm&quot;&gt;탐욕(Greedy) 알고리즘&lt;/a&gt;으로 해결할 수도 있지만, &lt;a href=&quot;https://ko.wikipedia.org/wiki/%EC%A0%95%EA%B7%9C_%ED%91%9C%ED%98%84%EC%8B%9D&quot;&gt;정규 표현식(정규식, Regular Expression, regex)&lt;/a&gt;을 이용하면 더 쉽게 해결할 수 있다.&lt;/p&gt;

&lt;h3 id=&quot;탐욕-알고리즘&quot;&gt;탐욕 알고리즘&lt;/h3&gt;

&lt;p&gt;탐욕 알고리즘을 사용한다면, 입력받은 문자열이 &lt;strong&gt;“hello” 문자열의 문자를 하나씩 차례대로 만족하는지&lt;/strong&gt;를 확인하면 된다.&lt;br /&gt;
하나를 만족할 때마다 지역적으로 최적이기 때문에 최종적으로 ‘o’를 만족하면, 해당 문자열은 문제의 조건을 만족한다.&lt;/p&gt;

&lt;h3 id=&quot;정규-표현식&quot;&gt;정규 표현식&lt;/h3&gt;

&lt;p&gt;정규 표현식(이하 정규식)은 문자열에 특정 패턴이 존재하는지 확인하거나 다른 문자열로 교체하는 등의 작업을 가능하게 해주는 형식 언어이다.&lt;br /&gt;
추출하고자 하는 문자열의 패턴이 일정하다면, 언제든지 정규식을 이용해 해당 부분을 추출할 수 있다.&lt;/p&gt;

&lt;p&gt;이 문제에서 판단하고자 하는 문자열은 일정한 패턴을 가지고 있다.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;“hello” 문자열의 문자들은 &lt;strong&gt;차례대로 존재&lt;/strong&gt;해야 한다.&lt;/li&gt;
  &lt;li&gt;“hello” 문자열의 &lt;strong&gt;각 문자 사이에는 어떤 문자도 존재&lt;/strong&gt;할 수 있다.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;이를 차례대로 정규식으로 표현하면 다음과 같다.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;hello&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;각 문자 사이에 &lt;code class=&quot;highlighter-rouge&quot;&gt;.*&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;최종적으로 &lt;code class=&quot;highlighter-rouge&quot;&gt;h.*e.*l.*l.*o&lt;/code&gt;와 같은 정규식이 탄생한다.&lt;br /&gt;
이는 &lt;strong&gt;각 문자 ‘h’, ‘e’, ‘l’, ‘l’, ‘o’ 사이에 어떤 문자든 0자 이상이 존재&lt;/strong&gt;한다는 의미이다.&lt;/p&gt;

&lt;p&gt;Python에서 &lt;code class=&quot;highlighter-rouge&quot;&gt;re&lt;/code&gt; 모듈을 통해 위 정규식에 해당하는 부분 문자열을 검색해, 조건을 만족하는지 판단할 수 있다.&lt;/p&gt;

&lt;h2 id=&quot;풀이-소스&quot;&gt;풀이 소스&lt;/h2&gt;

&lt;p&gt;문제 풀이 환경: Python 3.7&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;re&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'YES'&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;re&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;search&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;r'h.*e.*l.*l.*o'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;input&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'NO'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;</content><author><name>jamesujeon</name></author><category term="coding-problem" /><category term="codeforces" /><category term="python" /><summary type="html"></summary></entry><entry><title type="html">Codeforces 코딩 문제 풀기: 263A - Beautiful Matrix</title><link href="https://jamesujeon.github.io/posts/2019/12/09/codeforces-coding-problem-263a-beautiful-matrix/" rel="alternate" type="text/html" title="Codeforces 코딩 문제 풀기: 263A - Beautiful Matrix" /><published>2019-12-09T00:00:00+09:00</published><updated>2019-12-09T00:00:00+09:00</updated><id>https://jamesujeon.github.io/posts/2019/12/09/codeforces-coding-problem-263a-beautiful-matrix</id><content type="html" xml:base="https://jamesujeon.github.io/posts/2019/12/09/codeforces-coding-problem-263a-beautiful-matrix/">&lt;p&gt;&lt;img src=&quot;assets/codeforces_263a_beautiful_matrix.png&quot; alt=&quot;263A - Beautiful Matrix&quot; title=&quot;263A - Beautiful Matrix&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;문제-파악&quot;&gt;문제 파악&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://codeforces.com/problemset/problem/263/A&quot; target=&quot;_blank&quot;&gt;Beautiful Matrix 문제 링크&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;5 x 5 크기와 그 안에 오직 하나의 1과 나머지는 0인 배열이 주어진다.&lt;br /&gt;
1이 배열의 정가운데에 위치하게 하기 위해, 반복적으로 인접해 있는 요소끼리 자리를 1칸씩 바꿀 수 있다.&lt;br /&gt;
이때, 그렇게 하기 위해 필요한 최소 이동 수를 구해야 한다.&lt;/p&gt;

&lt;h2 id=&quot;문제-풀이&quot;&gt;문제 풀이&lt;/h2&gt;

&lt;p&gt;이 문제에서 자리를 바꾸는 방향이 제약되어 있다던지 등과 같은 특별한 제약이 걸려있지 않다.&lt;br /&gt;
따라서, 단순히 이동 거리만 계산하면 되고 목적지가 정해져 있으므로, 1의 위치를 구해 정가운데와의 거리를 구하면 된다.&lt;/p&gt;

&lt;p&gt;1의 위치를 구하는 것은 다양한 방법이 있을 수 있는데, 여기서는 &lt;code class=&quot;highlighter-rouge&quot;&gt;index()&lt;/code&gt; 함수를 이용해 구했다.&lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;index()&lt;/code&gt; 함수는 인자로 전달받은 값에 해당하는 요소의 &lt;strong&gt;첫 위치&lt;/strong&gt;를 반환한다.&lt;br /&gt;
첫 위치를 반환하기 때문에 추가적인 불필요한 순회를 하지 않는다.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;index()&lt;/code&gt; 함수는 인자에 해당하는 요소가 존재하지 않으면 &lt;code class=&quot;highlighter-rouge&quot;&gt;ValueError&lt;/code&gt; 예외를 던진다.&lt;br /&gt;
따라서, 반드시 예외 처리가 필요하다. 그렇지 않으면, 첫 번째 줄에서 바로 실패해버리는 불상사가 발생한다.&lt;br /&gt;
또한, 바깥 쪽도 불필요한 순회를 하지 않기 위해, 1이 발견되면 바로 순회를 중지하도록 한다.&lt;/p&gt;

&lt;p&gt;그래프에서 두 점의 거리는 두 점의 차이의 절댓값과 같기 때문에, 정가운데 위치를 빼고 &lt;code class=&quot;highlighter-rouge&quot;&gt;abs()&lt;/code&gt; 함수로 절댓값을 구한다.&lt;/p&gt;

&lt;h2 id=&quot;풀이-소스&quot;&gt;풀이 소스&lt;/h2&gt;

&lt;p&gt;문제 풀이 환경: Python 3.7&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;n&quot;&gt;matrix&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;input&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;split&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()))&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)]&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;index&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;try&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;index&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;matrix&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;break&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;except&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;ValueError&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;continue&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;result&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;abs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;abs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;</content><author><name>jamesujeon</name></author><category term="coding-problem" /><category term="codeforces" /><category term="python" /><summary type="html"></summary></entry><entry><title type="html">Codeforces 코딩 문제 풀기: 158B - Taxi</title><link href="https://jamesujeon.github.io/posts/2019/12/09/codeforces-coding-problem-158b-taxi/" rel="alternate" type="text/html" title="Codeforces 코딩 문제 풀기: 158B - Taxi" /><published>2019-12-09T00:00:00+09:00</published><updated>2019-12-09T00:00:00+09:00</updated><id>https://jamesujeon.github.io/posts/2019/12/09/codeforces-coding-problem-158b-taxi</id><content type="html" xml:base="https://jamesujeon.github.io/posts/2019/12/09/codeforces-coding-problem-158b-taxi/">&lt;p&gt;&lt;img src=&quot;assets/codeforces_158b_taxi.png&quot; alt=&quot;158B - Taxi&quot; title=&quot;158B - Taxi&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;문제-파악&quot;&gt;문제 파악&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://codeforces.com/problemset/problem/158/B&quot; target=&quot;_blank&quot;&gt;Taxi 문제 링크&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;1~4명으로 이루어진 다수의 그룹이 있고, 최대 4명이 탈 수 있는 택시를 탄다면, 몇 대의 택시가 필요할 지 구해야 한다.&lt;br /&gt;
이때, 한 대의 택시에 4명을 초과하지 않는다면 여러 그룹이 탈 수 있다.&lt;br /&gt;
또한, 한 그룹의 학생들은 모두 동일한 택시에 타야 한다.&lt;/p&gt;

&lt;p&gt;예를 들어, 아래와 같이 입력이 주어진다면,&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;5
1 2 4 3 3&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;다음과 같이 4대의 택시가 필요하다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;4명으로 구성된 3번째 그룹은 1대의 택시에 탄다.&lt;/li&gt;
  &lt;li&gt;3명으로 구성된 4, 5번째 그룹은 각각 1대의 택시에 탄다.&lt;/li&gt;
  &lt;li&gt;2명으로 구성된 2번째 그룹은 1대의 택시에 탄다.&lt;/li&gt;
  &lt;li&gt;1명으로 구성된 1번째 그룹은 2명 또는 3명으로 구성된 택시에 같이 탄다.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;다수의 그룹이 같이 탈 수 있는 경우를 고려해야 한다.&lt;/p&gt;

&lt;h2 id=&quot;문제-풀이&quot;&gt;문제 풀이&lt;/h2&gt;

&lt;p&gt;문제의 예시에서도 힌트가 주어졌듯이, 택시를 채울 수 있는 경우의 수를 하나씩 생각해가며 문제를 해결할 수 있다.&lt;br /&gt;
이렇게 그때그때 최적의 답을 구해서, 최종적으로 최적의 해답을 구하는 방식을 &lt;a href=&quot;https://en.wikipedia.org/wiki/Greedy_algorithm&quot;&gt;탐욕(Greedy) 알고리즘&lt;/a&gt;이라 한다.&lt;br /&gt;
이 알고리즘은 &lt;strong&gt;지역적으로 최적이면서 전역적으로 최적인 문제&lt;/strong&gt;에만 적용할 수 있다.&lt;/p&gt;

&lt;p&gt;이 문제에서 택시의 최대 탑승 가능 인원 수는 정해져 있고, 그룹이 몇 명으로 구성되어 있는 지 알 수 있다.&lt;br /&gt;
따라서, 특정 조건으로 생각하면, 탐욕 알고리즘 방식으로 &lt;strong&gt;그때그때 택시가 몇 대가 필요한 지&lt;/strong&gt; 구할 수 있다.
이때 특정 조건을 &lt;strong&gt;인원 수에 따라 그룹을 분류&lt;/strong&gt;하는 것을 생각해 볼 수 있다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;택시에 3명 또는 4명 그룹이 탑승한다면, 한 번에 2그룹이 탑승할 수 없으므로 필요한 택시 수는 3명 그룹의 수 + 4명 그룹의 수와 동일하다.&lt;/li&gt;
  &lt;li&gt;택시에 2명 그룹이 탑승한다면, 한 번에 최대 2그룹이 탑승할 수 있으므로 2를 나눠 올림 처리(&lt;code class=&quot;highlighter-rouge&quot;&gt;ceil(c2 / 2)&lt;/code&gt;)하면 필요한 택시 수를 구할 수 있다.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;택시에 1명 그룹이 탑승할 때는 2명 또는 3명 그룹이 탑승한 택시에 같이 탈 수 있으므로 까다로워진다.&lt;br /&gt;
3명 그룹에 동승할 때는 한 대의 택시에 한 자리만 비어 있으므로, 해당 그룹 수만큼 1명 그룹이 탑승할 수 있다.&lt;br /&gt;
2명 그룹에 동승할 때는 빈 자리가 생겨봐야 한 대에 2자리만 비어 있으므로, 최대 2만큼 1명 그룹이 탑승할 수 있다.&lt;br /&gt;
따라서, 동승하는 만큼 1명 그룹의 수를 제외(&lt;code class=&quot;highlighter-rouge&quot;&gt;max(c1 - (c2 % 2) * 2 - c3, 0)&lt;/code&gt;)하고, 한 대 택시에 4그룹이 타는 것을 고려해 4를 나눠 올림 처리(&lt;code class=&quot;highlighter-rouge&quot;&gt;ceil(c1 / 4)&lt;/code&gt;)하면 필요한 택시 수를 구할 수 있다.&lt;br /&gt;
이때, &lt;code class=&quot;highlighter-rouge&quot;&gt;max()&lt;/code&gt; 함수를 이용한 이유는 동승 그룹 수가 더 많은 경우, 0그룹으로 처리하기 위해서이다.&lt;/p&gt;

&lt;p&gt;참고로 처음에 입력받을 때, 풀이 소스와 같이 처리하면 입력과 동시에 각 변수에 &lt;strong&gt;인원 수 별 그룹 수&lt;/strong&gt;를 할당할 수 있다.&lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;map()&lt;/code&gt; 함수로 &lt;code class=&quot;highlighter-rouge&quot;&gt;input().count()&lt;/code&gt; 함수의 인자에 &lt;code class=&quot;highlighter-rouge&quot;&gt;['1', '2', '3', '4']&lt;/code&gt; 리스트의 각 숫자를 전달해, 입력받은 문자열(&lt;code class=&quot;highlighter-rouge&quot;&gt;input()&lt;/code&gt;)에 각 숫자가 몇 개 들어 있는 지 구할 수 있다.&lt;br /&gt;
그렇게 각 숫자의 개수(그룹 수)가 차례대로 &lt;code class=&quot;highlighter-rouge&quot;&gt;c1, c2, c3, c4&lt;/code&gt; 변수에 대입된다.&lt;/p&gt;

&lt;p&gt;첫 줄의 입력은 사용하지 않아도 되므로, 무시하도록 처리했다. (&lt;code class=&quot;highlighter-rouge&quot;&gt;_ = input()&lt;/code&gt;)&lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;_&lt;/code&gt; 변수는 사용하려면 사용할 수 있지만, Python에서는 &lt;strong&gt;대입되는 값을 무시하는 용도&lt;/strong&gt;로 많이 사용된다.&lt;/p&gt;

&lt;h2 id=&quot;풀이-소스&quot;&gt;풀이 소스&lt;/h2&gt;

&lt;p&gt;문제 풀이 환경: Python 3.7&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;math&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ceil&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;_&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;input&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;c1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c4&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;input&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;count&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'1'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'2'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'3'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'4'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]))&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;c1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;max&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;taxi_count&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c4&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c3&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ceil&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ceil&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;taxi_count&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;</content><author><name>jamesujeon</name></author><category term="coding-problem" /><category term="codeforces" /><category term="python" /><summary type="html"></summary></entry><entry><title type="html">Codeforces 코딩 문제 풀기: 50A - Domino piling</title><link href="https://jamesujeon.github.io/posts/2019/12/06/codeforces-coding-problem-50a-domino-piling/" rel="alternate" type="text/html" title="Codeforces 코딩 문제 풀기: 50A - Domino piling" /><published>2019-12-06T00:00:00+09:00</published><updated>2019-12-06T00:00:00+09:00</updated><id>https://jamesujeon.github.io/posts/2019/12/06/codeforces-coding-problem-50a-domino-piling</id><content type="html" xml:base="https://jamesujeon.github.io/posts/2019/12/06/codeforces-coding-problem-50a-domino-piling/">&lt;p&gt;&lt;img src=&quot;assets/codeforces_50a_domino_piling.png&quot; alt=&quot;50A - Domino piling&quot; title=&quot;50A - Domino piling&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;문제-파악&quot;&gt;문제 파악&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://codeforces.com/problemset/problem/50/A&quot; target=&quot;_blank&quot;&gt;Domino piling 문제 링크&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;2 x 1 크기의 도미노 조각을 이용해 M x N 크기의 판을 채울 때, 필요한 최대 도미노 조각 수를 구한다.&lt;br /&gt;
이때, 도미노 조각은 서로 겹칠 수 없으며, 판 안에 존재해야 한다.&lt;/p&gt;

&lt;h2 id=&quot;문제-풀이&quot;&gt;문제 풀이&lt;/h2&gt;

&lt;p&gt;조각의 긴 변이 높이가 되도록 세운 후, 판의 좌상단 부분부터 채운다.&lt;br /&gt;
여기서 긴 변은 2가 되고, 1 크기의 변으로 한 줄부터 채운다고 생각하면, 판의 너비와 동일하게 된다.&lt;br /&gt;
따라서, 하나의 줄을 채우는데 필요한 조각 수는 &lt;code class=&quot;highlighter-rouge&quot;&gt;N&lt;/code&gt;만큼이 된다.&lt;br /&gt;
반복적으로 여러 줄에 대해 채울 수 없을 때까지 조각을 채우면, 반복적으로 &lt;code class=&quot;highlighter-rouge&quot;&gt;N&lt;/code&gt;을 개수에 더하면 된다.&lt;/p&gt;

&lt;p&gt;하나의 줄에 더 이상 조각을 세운 채로(긴 변이 높이가 되도록) 채울 수 없으면, 눕혀서 채운다.&lt;br /&gt;
조각을 눕히면 조각의 너비는 2가 되고, 판의 너비에 대해 최대로 넣는 개수는 &lt;code class=&quot;highlighter-rouge&quot;&gt;(N / 2)의 내림 수&lt;/code&gt;만큼이 된다.&lt;br /&gt;
Python에서는 &lt;code class=&quot;highlighter-rouge&quot;&gt;int()&lt;/code&gt; 함수를 이용하면, 정수로 변환하며 &lt;strong&gt;자동으로 소숫점을 내림 처리&lt;/strong&gt;한다.&lt;br /&gt;
눕혀서 채우는 것을 마지막으로 개수에 더하면, 총 조각 수를 구할 수 있다.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;n&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;input&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;split&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;result&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;result&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;m&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;도미노 조각의 높이와 너비를 일반화해서 코드를 수정하면 다음과 같다.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;n&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;input&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;split&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;piece_height&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;piece_width&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;result&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;# result += int(n / piece_width) if m &amp;gt; piece_height - 1 else int(n / piece_height)
&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;result&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;piece_width&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;piece_height&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;piece_height&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;m&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;piece_height&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;하지만, 이 문제의 경우, &lt;strong&gt;조각의 크기가 2 x 1&lt;/strong&gt;인 관계로 더 간단한 풀이가 가능하다.&lt;br /&gt;
사각형 모양의 판을 한 줄로 쭉 펴고 조각을 눕혀서 채우면, 한 번의 계산 만으로 총 조각 수를 구할 수 있다.&lt;br /&gt;
왜냐하면, 좌상단 부분부터 최대한 채워서 남는 영역은 판의 마지막 줄의 우측 부분이기 때문이다.&lt;br /&gt;
(항상 마지막 줄을 제외한 나머지 줄을 꽉 채울 수 있다.)&lt;/p&gt;

&lt;h2 id=&quot;풀이-소스&quot;&gt;풀이 소스&lt;/h2&gt;

&lt;p&gt;문제 풀이 환경: Python 3.7&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;n&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;input&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;split&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;result&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;m&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;</content><author><name>jamesujeon</name></author><category term="coding-problem" /><category term="codeforces" /><category term="python" /><summary type="html"></summary></entry></feed>